{"version":3,"sources":["webpack:///./node_modules/@writewithocto/ink/dist/es/eiffel-3ef2b57e.js"],"names":["wordObj","words","o","i","e","length","keywords","operators","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","eiffel","startState","token","word","current","propertyIsEnumerable","languageData","commentTokens","line"],"mappings":"kHAAA,SAASA,EAAQC,GAEf,IADA,IAAIC,EAAI,GACCC,EAAI,EAAGC,EAAIH,EAAMI,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,EAAME,KAAM,EAC5D,OAAOD,EAHT,8CAKA,IAAII,EAAWN,EAAQ,CACrB,OACA,SACA,OACA,UACA,QACA,SACA,WACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,YACA,WACA,SACA,OACA,MACA,WACA,OACA,QACA,OACA,KACA,UACA,QACA,UACA,KACA,SACA,OACA,WACA,SACA,SACA,MACA,SACA,OACA,KACA,WACA,SACA,QACA,QACA,QACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,YACA,QACA,UACA,SACA,WACA,aACA,KACA,MACA,UACA,MACA,OAEEO,EAAYP,EAAQ,CAAC,KAAM,WAAW,MAAO,KAAK,KAAK,OAE3D,SAASQ,EAAMC,EAAQC,EAAQC,GAE7B,OADAA,EAAMC,SAASC,KAAKJ,GACbA,EAAOC,EAAQC,GAGxB,SAASG,EAAUJ,EAAQC,GACzB,GAAID,EAAOK,WAAY,OAAO,KAC9B,IAAIC,EAAKN,EAAOO,OAChB,MAAU,KAAND,GAAiB,KAANA,EACNR,EAAMU,EAAWF,EAAI,UAAWN,EAAQC,GAChC,KAANK,GAAWN,EAAOS,IAAI,MAC/BT,EAAOU,YACA,WACQ,KAANJ,GAAWN,EAAOS,IAAI,KACxB,WACE,QAAQE,KAAKL,IACtBN,EAAOY,SAAS,iBAChBZ,EAAOS,IAAI,UACJ,YACE,eAAeE,KAAKL,IAC7BN,EAAOY,SAAS,gBAChBZ,EAAOS,IAAI,UACJ,YACE,iBAAiBE,KAAKL,IAC/BN,EAAOY,SAAS,kBACT,YAEA,KAIX,SAASJ,EAAWK,EAAOC,EAAQC,GACjC,OAAO,SAASf,EAAQC,GACtB,IAAqBK,EAAjBU,GAAU,EACd,MAA+B,OAAvBV,EAAKN,EAAOO,QAAiB,CACnC,GAAID,GAAMO,IAAUE,IAAcC,GAAU,CAC1Cf,EAAMC,SAASe,MACf,MAEFD,GAAWA,GAAiB,KAANV,EAExB,OAAOQ,GAIX,IAAMI,EAAS,CACbC,WAAY,WACV,MAAO,CAACjB,SAAU,CAACE,KAGrBgB,MAAO,SAASpB,EAAQC,GACtB,IAAIa,EAAQb,EAAMC,SAASD,EAAMC,SAASP,OAAO,GAAGK,EAAQC,GAC5D,GAAa,YAATa,EAAqB,CACvB,IAAIO,EAAOrB,EAAOsB,UAClBR,EAAQlB,EAAS2B,qBAAqBvB,EAAOsB,WAAa,UACtDzB,EAAU0B,qBAAqBvB,EAAOsB,WAAa,WACnD,qBAAqBX,KAAKU,GAAQ,MAClC,iBAAiBV,KAAKU,IACtB,iBAAiBV,KAAKU,IACtB,uBAAuBV,KAAKU,IAC5B,uCAAuCV,KAAKU,IAC5C,YAAYV,KAAKU,GAJa,SAK9B,WAEN,OAAOP,GAETU,aAAc,CACZC,cAAe,CAACC,KAAM","file":"js/chunk-2d0c8627.a7a28291.js","sourcesContent":["function wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\nvar keywords = wordObj([\n  'note',\n  'across',\n  'when',\n  'variant',\n  'until',\n  'unique',\n  'undefine',\n  'then',\n  'strip',\n  'select',\n  'retry',\n  'rescue',\n  'require',\n  'rename',\n  'reference',\n  'redefine',\n  'prefix',\n  'once',\n  'old',\n  'obsolete',\n  'loop',\n  'local',\n  'like',\n  'is',\n  'inspect',\n  'infix',\n  'include',\n  'if',\n  'frozen',\n  'from',\n  'external',\n  'export',\n  'ensure',\n  'end',\n  'elseif',\n  'else',\n  'do',\n  'creation',\n  'create',\n  'check',\n  'alias',\n  'agent',\n  'separate',\n  'invariant',\n  'inherit',\n  'indexing',\n  'feature',\n  'expanded',\n  'deferred',\n  'class',\n  'Void',\n  'True',\n  'Result',\n  'Precursor',\n  'False',\n  'Current',\n  'create',\n  'attached',\n  'detachable',\n  'as',\n  'and',\n  'implies',\n  'not',\n  'or'\n]);\nvar operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\nfunction chain(newtok, stream, state) {\n  state.tokenize.push(newtok);\n  return newtok(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) return null;\n  var ch = stream.next();\n  if (ch == '\"'||ch == \"'\") {\n    return chain(readQuoted(ch, \"string\"), stream, state);\n  } else if (ch == \"-\"&&stream.eat(\"-\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \":\"&&stream.eat(\"=\")) {\n    return \"operator\";\n  } else if (/[0-9]/.test(ch)) {\n    stream.eatWhile(/[xXbBCc0-9\\.]/);\n    stream.eat(/[\\?\\!]/);\n    return \"variable\";\n  } else if (/[a-zA-Z_0-9]/.test(ch)) {\n    stream.eatWhile(/[a-zA-Z_0-9]/);\n    stream.eat(/[\\?\\!]/);\n    return \"variable\";\n  } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n    stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n    return \"operator\";\n  } else {\n    return null;\n  }\n}\n\nfunction readQuoted(quote, style,  unescaped) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && (unescaped || !escaped)) {\n        state.tokenize.pop();\n        break;\n      }\n      escaped = !escaped && ch == \"%\";\n    }\n    return style;\n  };\n}\n\nconst eiffel = {\n  startState: function() {\n    return {tokenize: [tokenBase]};\n  },\n\n  token: function(stream, state) {\n    var style = state.tokenize[state.tokenize.length-1](stream, state);\n    if (style == \"variable\") {\n      var word = stream.current();\n      style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n        : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n        : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n        : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n        : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n        : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n        : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n        : /^[0-9]+$/g.test(word) ? \"number\"\n        : \"variable\";\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {line: \"--\"}\n  }\n};\n\nexport { eiffel };\n"],"sourceRoot":""}