{"version":3,"sources":["webpack:///./node_modules/@writewithocto/ink/dist/es/simple-mode-a89c2f92.js","webpack:///./node_modules/@writewithocto/ink/dist/es/wast-c5db5bb4.js"],"names":["simpleMode","states","ensureState","states_","meta","languageData","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","startState","pending","copyState","s","slice","stack","token","tokenFunction","indentFunction","name","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","next","this","regex","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec","kKeywords","wast","start","comment"],"mappings":"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","file":"js/chunk-588804f1.88dc6955.js","sourcesContent":["function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n}\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token;\n        if (token && token.apply) token = token(matches);\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n\nexport { simpleMode as s };\n","import { s as simpleMode } from './simple-mode-a89c2f92.js';\n\nvar kKeywords = [\n  \"align\",\n  \"block\",\n  \"br(_if|_table|_on_(cast|data|func|i31|null))?\",\n  \"call(_indirect|_ref)?\",\n  \"current_memory\",\n  \"\\\\bdata\\\\b\",\n  \"catch(_all)?\",\n  \"delegate\",\n  \"drop\",\n  \"elem\",\n  \"else\",\n  \"end\",\n  \"export\",\n  \"\\\\bextern\\\\b\",\n  \"\\\\bfunc\\\\b\",\n  \"global(\\\\.(get|set))?\",\n  \"if\",\n  \"import\",\n  \"local(\\\\.(get|set|tee))?\",\n  \"loop\",\n  \"module\",\n  \"mut\",\n  \"nop\",\n  \"offset\",\n  \"param\",\n  \"result\",\n  \"rethrow\",\n  \"return(_call(_indirect|_ref)?)?\",\n  \"select\",\n  \"start\",\n  \"table(\\\\.(size|get|set|size|grow|fill|init|copy))?\",\n  \"then\",\n  \"throw\",\n  \"try\",\n  \"type\",\n  \"unreachable\",\n  \"unwind\",\n\n  // Numeric opcodes.\n  \"i(32|64)\\\\.(store(8|16)|(load(8|16)_[su]))\",\n  \"i64\\\\.(load32_[su]|store32)\",\n  \"[fi](32|64)\\\\.(const|load|store)\",\n  \"f(32|64)\\\\.(abs|add|ceil|copysign|div|eq|floor|[gl][et]|max|min|mul|nearest|neg?|sqrt|sub|trunc)\",\n  \"i(32|64)\\\\.(a[dn]d|c[lt]z|(div|rem)_[su]|eqz?|[gl][te]_[su]|mul|ne|popcnt|rot[lr]|sh(l|r_[su])|sub|x?or)\",\n  \"i64\\\\.extend_[su]_i32\",\n  \"i32\\\\.wrap_i64\",\n  \"i(32|64)\\\\.trunc_f(32|64)_[su]\",\n  \"f(32|64)\\\\.convert_i(32|64)_[su]\",\n  \"f64\\\\.promote_f32\",\n  \"f32\\\\.demote_f64\",\n  \"f32\\\\.reinterpret_i32\",\n  \"i32\\\\.reinterpret_f32\",\n  \"f64\\\\.reinterpret_i64\",\n  \"i64\\\\.reinterpret_f64\",\n  // Atomics.\n  \"memory(\\\\.((atomic\\\\.(notify|wait(32|64)))|grow|size))?\",\n  \"i64\\.atomic\\\\.(load32_u|store32|rmw32\\\\.(a[dn]d|sub|x?or|(cmp)?xchg)_u)\",\n  \"i(32|64)\\\\.atomic\\\\.(load((8|16)_u)?|store(8|16)?|rmw(\\\\.(a[dn]d|sub|x?or|(cmp)?xchg)|(8|16)\\\\.(a[dn]d|sub|x?or|(cmp)?xchg)_u))\",\n  // SIMD.\n  \"v128\\\\.load(8x8|16x4|32x2)_[su]\",\n  \"v128\\\\.load(8|16|32|64)_splat\",\n  \"v128\\\\.(load|store)(8|16|32|64)_lane\",\n  \"v128\\\\.load(32|64)_zero\",\n  \"v128\\.(load|store|const|not|andnot|and|or|xor|bitselect|any_true)\",\n  \"i(8x16|16x8)\\\\.(extract_lane_[su]|(add|sub)_sat_[su]|avgr_u)\",\n  \"i(8x16|16x8|32x4|64x2)\\\\.(neg|add|sub|abs|shl|shr_[su]|all_true|bitmask|eq|ne|[lg][te]_s)\",\n  \"(i(8x16|16x8|32x4|64x2)|f(32x4|64x2))\\.(splat|replace_lane)\",\n  \"i(8x16|16x8|32x4)\\\\.(([lg][te]_u)|((min|max)_[su]))\",\n  \"f(32x4|64x2)\\\\.(neg|add|sub|abs|nearest|eq|ne|[lg][te]|sqrt|mul|div|min|max|ceil|floor|trunc)\",\n  \"[fi](32x4|64x2)\\\\.extract_lane\",\n  \"i8x16\\\\.(shuffle|swizzle|popcnt|narrow_i16x8_[su])\",\n  \"i16x8\\\\.(narrow_i32x4_[su]|mul|extadd_pairwise_i8x16_[su]|q15mulr_sat_s)\",\n  \"i16x8\\\\.(extend|extmul)_(low|high)_i8x16_[su]\",\n  \"i32x4\\\\.(mul|dot_i16x8_s|trunc_sat_f64x2_[su]_zero)\",\n  \"i32x4\\\\.((extend|extmul)_(low|high)_i16x8_|trunc_sat_f32x4_|extadd_pairwise_i16x8_)[su]\",\n  \"i64x2\\\\.(mul|(extend|extmul)_(low|high)_i32x4_[su])\",\n  \"f32x4\\\\.(convert_i32x4_[su]|demote_f64x2_zero)\",\n  \"f64x2\\\\.(promote_low_f32x4|convert_low_i32x4_[su])\",\n  // Reference types, function references, and GC.\n  \"\\\\bany\\\\b\",\n  \"array\\\\.len\",\n  \"(array|struct)(\\\\.(new_(default_)?with_rtt|get(_[su])?|set))?\",\n  \"\\\\beq\\\\b\",\n  \"field\",\n  \"i31\\\\.(new|get_[su])\",\n  \"\\\\bnull\\\\b\",\n  \"ref(\\\\.(([ai]s_(data|func|i31))|cast|eq|func|(is_|as_non_)?null|test))?\",\n  \"rtt(\\\\.(canon|sub))?\",\n];\n\nconst wast = simpleMode({\n  start: [\n    {regex: new RegExp(kKeywords.join('|')), token: \"keyword\"},\n    {regex: /\\b((any|data|eq|extern|i31|func)ref|[fi](32|64)|i(8|16))\\b/, token: \"atom\"},\n    {regex: /\\b(funcref|externref|[fi](32|64))\\b/, token: \"atom\"},\n    {regex: /\\$([a-zA-Z0-9_`\\+\\-\\*\\/\\\\\\^~=<>!\\?@#$%&|:\\.]+)/, token: \"variable\"},\n    {regex: /\"(?:[^\"\\\\\\x00-\\x1f\\x7f]|\\\\[nt\\\\'\"]|\\\\[0-9a-fA-F][0-9a-fA-F])*\"/, token: \"string\"},\n    {regex: /\\(;.*?/, token: \"comment\", next: \"comment\"},\n    {regex: /;;.*$/, token: \"comment\"},\n    {regex: /\\(/, indent: true},\n    {regex: /\\)/, dedent: true},\n  ],\n\n  comment: [\n    {regex: /.*?;\\)/, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"},\n  ],\n\n  meta: {\n    dontIndentStates: ['comment'],\n  },\n});\n\n// https://github.com/WebAssembly/design/issues/981 mentions text/webassembly,\n// which seems like a reasonable choice, although it's not standard right now.\n\nexport { wast };\n"],"sourceRoot":""}